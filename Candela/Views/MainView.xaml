<UserControl x:Class="Candela.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Candela.Views"
             xmlns:viewmodels="clr-namespace:Candela.ViewModels"
             xmlns:views="clr-namespace:Candela.Views"
             mc:Ignorable="d" 
             d:DesignHeight="710" d:DesignWidth="1014">

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type viewmodels:RgbAdjustmentViewModel}">
            <views:AdjustmentView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:AlphaAdjustmentViewModel}">
            <views:AdjustmentView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:BatchViewModel}">
            <views:BatchView/>
        </DataTemplate>
    </UserControl.Resources>

    <Grid x:Name="MainGrid" Background="{StaticResource Bright}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="338" />
        </Grid.ColumnDefinitions>

        <!--Header background solid-->
        <Rectangle Grid.Column="1" Fill="White" Grid.Row="0" Margin="5,5,0,5" />
        <!--Batch background solid-->
        <Rectangle Grid.Column="1" Fill="Transparent" Grid.Row="2" Margin="5,5,0,0" />
        <!--Adjustments background solid-->
        <Rectangle Grid.Column="1" Fill="White" Grid.Row="3" Margin="5,0,0,0" />
        <!--Image background solid-->
        <Rectangle Grid.Column="0" Fill="{Binding BGColor, UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,0"
                   Visibility="{Binding IsChecked, ElementName=ShowColorToggle, Converter={StaticResource BoolToVisibilityConverter}}" Grid.RowSpan="4"/>
        <!--Background image-->
        <Image Grid.Column="0" Source="{Binding BGImagePath, UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,0"
               HorizontalAlignment="Left" Visibility="{Binding IsChecked, ElementName=ShowCustomToggle, Converter={StaticResource BoolToVisibilityConverter}}" Grid.RowSpan="4"/>
        <!--Image-->
        <Image Grid.Column="0" Source="{Binding DisplayedImage, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ImageConverter}}"
               HorizontalAlignment="Left" Grid.RowSpan="4" Margin="0,5,0,0" />
        <!--Timer-->
        <TextBlock Text="{Binding RenderTime, UpdateSourceTrigger=PropertyChanged, FallbackValue='4 ms'}" Foreground="LawnGreen" 
                   Background="Black" Grid.Column="0" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5"/>

        <!--MAIN PANEL-->
        <!--Buttons-->
        <Grid Margin="5,10,0,10" Grid.Column="1" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <!--Upload button-->
            <Button Height="38" Width="105" FontSize="16" Command="{Binding UploadCommand}" Grid.Column="0" >
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="&#xEC50;" FontFamily="Segoe MDL2 Assets" Padding="4" RenderTransformOrigin="0.5,0.5"/>
                    <TextBlock Text="Open file" Margin="0,0,4,0" FontSize="14" Padding="6,2,0,0"/>
                </StackPanel>
            </Button>
            <!--Save button-->
            <Button Height="38" Width="105" FontSize="16"  Command="{Binding SaveCommand}" Grid.Column="1" >
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="&#xE74E;" FontFamily="Segoe MDL2 Assets" Padding="4" RenderTransformOrigin="0.5,0.5"/>
                    <TextBlock Text="Save as..." Margin="0,0,4,0" FontSize="14" Padding="6,2,0,0"/>
                </StackPanel>
            </Button>
            <!--Batch button-->
            <Button Height="38" Width="105" FontSize="16" Grid.Column="2" 
                    Command="{Binding OpenBatchPanelCommand}" >
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="&#xE7B8;" FontFamily="Segoe MDL2 Assets" Padding="4" RenderTransformOrigin="0.5,0.5"/>
                    <TextBlock Text="Batch..." Margin="0,0,4,0" FontSize="14" Padding="6,2,0,0"/>
                </StackPanel>
            </Button>
        </Grid>

        <!--Batch panel-->
        <ContentControl Content="{Binding BatchPanel, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"
                        Grid.Row="1" Margin="5,0,0,0"/>

        <!--Buttons-->
        <Grid Margin="5,0,0,5" Grid.Column="1" Grid.Row="2" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <!--Lum. to alpha button-->
            <ToggleButton Content="Lum. to alpha" FontSize="14" Height="28" IsChecked="{Binding LumToAlpha}" Grid.Column="0" 
                          Margin="5" >
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="Border" BorderBrush="{StaticResource SkyBlue}" BorderThickness="1" CornerRadius="3"
                                            Background="AliceBlue" >
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="false">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Bright}"/>
                                            <Setter TargetName="Border" Property="Background" Value="White"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DisplayedPanel}" Value="null">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <!--PMA button-->
            <ToggleButton Content="Premul. Alpha" FontSize="14" Height="28" IsChecked="{Binding PremulAlpha}" Grid.Column="1" 
                          Margin="5">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="Border" BorderBrush="{StaticResource SkyBlue}" BorderThickness="1" CornerRadius="3"
                                            Background="AliceBlue" >
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="false">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Bright}"/>
                                            <Setter TargetName="Border" Property="Background" Value="White"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DisplayedPanel}" Value="null">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
        </Grid>

        <ScrollViewer VerticalScrollBarVisibility="Hidden" CanContentScroll="False" Grid.Column="1" Grid.Row="3" Margin="15,5,10,0">
            <StackPanel >
                <!--Adjustments-->
                <TextBlock Text="Color correction" FontWeight="Medium" FontSize="14" Margin="0,5,0,5" HorizontalAlignment="Center"/>

                <Grid Margin="0,0,0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <!--RGB button-->
                    <Button x:Name="RgbButton" FontSize="14" Margin="0,0,0,5" Grid.Column="0" Content="RGB"
                        Command="{Binding ChangeAdjustmentPanelCommand}" CommandParameter="0" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DisplayedPanel}" Value="null">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!--Alpha button-->
                    <Button x:Name="AlphaButton" FontSize="14" Margin="0,0,0,5" Grid.Column="1" Content="Alpha"
                        Command="{Binding ChangeAdjustmentPanelCommand}" CommandParameter="1" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DisplayedPanel}" Value="null">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Grid VerticalAlignment="Bottom" Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="RgbUnderline"  BorderBrush="{StaticResource SkyBlue}" BorderThickness="0,1,0,0" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayedPanel}" Value="RgbAdjPanel">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <Border x:Name="AlphaUnderline" BorderBrush="{StaticResource SkyBlue}" BorderThickness="0,1,0,0" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayedPanel}" Value="AlphaAdjPanel">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </Grid>

                    <Grid.Triggers>
                        <EventTrigger RoutedEvent="Button.Click" SourceName="RgbButton">
                            <EventTrigger.Actions>
                                <BeginStoryboard >
                                    <Storyboard >
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RgbUnderline" Storyboard.TargetProperty="Opacity" RepeatBehavior="1x">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="100">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Button.Click" SourceName="AlphaButton">
                            <EventTrigger.Actions>
                                <BeginStoryboard >
                                    <Storyboard >
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="AlphaUnderline" Storyboard.TargetProperty="Opacity" RepeatBehavior="1x">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="100">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Grid.Triggers>
                </Grid>
                <!--Sliders-->
                <ContentControl Content="{Binding CurrentAdjustmentPanel, UpdateSourceTrigger=PropertyChanged}" 
                        Grid.Column="1" Grid.Row="1" />
            </StackPanel>
        </ScrollViewer>

        <!--Viewport options-->
        <Grid Background="White" Grid.Column="0" Grid.Row="3" Height="30" VerticalAlignment="Bottom">
            <!--View-->
            <StackPanel Orientation="Horizontal" Margin="10,0">
                <ComboBox IsSynchronizedWithCurrentItem="True" Height="24" Width="90" Margin="5,0" Foreground="{StaticResource Ash}" VerticalAlignment="Center"
                          ItemsSource="{Binding Views}" SelectedItem="{Binding SelectedView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border Margin="5" BorderBrush="{StaticResource Bright}" BorderThickness="1,0,0,0"/>
                <ToggleButton x:Name="ShowColorToggle" Content="&#xE790;" FontFamily="Segoe MDL2 Assets" FontSize="18" 
                              Margin="5,0" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="True" ToolTip="Toggle color background"/>
                <Button Content="&#xE978;" FontFamily="Segoe MDL2 Assets" Margin="5,0" VerticalAlignment="Center" Foreground="{Binding BGColor}"
                        Command="{Binding PickBackgroundColorCommand}" Cursor="Hand"/>
                <TextBox x:Name="BGColorBox" Height="24" Width="90" Margin="5,0" VerticalAlignment="Center" Text="{Binding BGColor, UpdateSourceTrigger=PropertyChanged, FallbackValue='#'}">
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding SetBGColorCommand}" CommandParameter="{Binding Path=Text, ElementName=BGColorBox}" Key="Enter" />
                    </TextBox.InputBindings>
                </TextBox>
                <Border Margin="5" BorderBrush="{StaticResource Bright}" BorderThickness="1,0,0,0"/>
                <ToggleButton x:Name="ShowCustomToggle" Content="&#xEB9F;" FontFamily="Segoe MDL2 Assets" FontSize="18" 
                              Margin="5,0" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="True" ToolTip="Toggle image background"/>
                <TextBlock VerticalAlignment="Center" Margin="5,0">
                    <Hyperlink Command="{Binding UploadBGCommand}">Browse...
                        <Hyperlink.Style>
                            <Style TargetType="{x:Type Hyperlink}">
                                <Setter Property="Foreground" Value="{StaticResource SkyBlue}"/>
                            </Style>
                        </Hyperlink.Style>
                    </Hyperlink>
                </TextBlock>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
